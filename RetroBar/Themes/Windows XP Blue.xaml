<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <system:Double x:Key="TaskbarHeight">30</system:Double>
    <Thickness x:Key="TaskButtonMargin" />

    <LinearGradientBrush x:Key="TaskbarBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#3888e9"
                      Offset="0.0" />
        <GradientStop Color="#4993e6"
                      Offset="0.05" />
        <GradientStop Color="#2257d5"
                      Offset="0.18" />
        <GradientStop Color="#2663e0"
                      Offset="0.9" />
        <GradientStop Color="#1941a5"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskbarVerticalBackground"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <GradientStop Color="#3888e9"
                      Offset="0.0" />
        <GradientStop Color="#4993e6"
                      Offset="0.01" />
        <GradientStop Color="#2257d5"
                      Offset="0.05" />
        <GradientStop Color="#2663e0"
                      Offset="0.95" />
        <GradientStop Color="#1941a5"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TaskbarBorder" Color="#3168d5" />

    <SolidColorBrush x:Key="TrayTopBottomBorder" Color="#095bc9" />
    <SolidColorBrush x:Key="TrayLeftBorder1" Color="#8a000000" />
    <SolidColorBrush x:Key="TrayLeftBorder2" Color="#22b9e5" />
    <SolidColorBrush x:Key="TrayLeftBorder3" Color="#22c4f4" />
    <SolidColorBrush x:Key="TrayLeftBorder4" Color="#3822c4f4" />
    <LinearGradientBrush x:Key="TrayBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#16adf0"
                      Offset="0.0" />
        <GradientStop Color="#19b9f3"
                      Offset="0.05" />
        <GradientStop Color="#1290e8"
                      Offset="0.18" />
        <GradientStop Color="#0d8dea"
                      Offset="0.6" />
        <GradientStop Color="#0fa0ef"
                      Offset="0.9" />
        <GradientStop Color="#1582dc"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TrayVerticalBackground"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <GradientStop Color="#16adf0"
                      Offset="0.0" />
        <GradientStop Color="#19b9f3"
                      Offset="0.01" />
        <GradientStop Color="#1290e8"
                      Offset="0.05" />
        <GradientStop Color="#0d8dea"
                      Offset="0.6" />
        <GradientStop Color="#0fa0ef"
                      Offset="0.95" />
        <GradientStop Color="#1582dc"
                      Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TrayToggleBorder"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <GradientStop Color="#10225e"
                      Offset="0.2" />
        <GradientStop Color="#ced6e6"
                      Offset="0.8" />
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="TrayToggleBackground"
                         GradientOrigin="0.15,0.15"
                         RadiusX="0.75"
                         RadiusY="0.7">
        <GradientStop Color="#8ed6f9"
                      Offset="0.0" />
        <GradientStop Color="#0671eb"
                      Offset="0.9" />
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="TrayToggleHoverBackground"
                         GradientOrigin="0.15,0.15"
                         RadiusX="0.75"
                         RadiusY="0.7">
        <GradientStop Color="#c3e5f9"
                      Offset="0.0" />
        <GradientStop Color="#0d98e8"
                      Offset="0.9" />
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="TrayTogglePressedBackground"
                         GradientOrigin="0.1,0.1"
                         RadiusX="0.6"
                         RadiusY="0.6">
        <GradientStop Color="#86caec"
                      Offset="0.0" />
        <GradientStop Color="#0147be"
                      Offset="0.9" />
    </RadialGradientBrush>
    <DropShadowEffect x:Key="TrayToggleArrowShadow"
                      Color="#077eed"
                      BlurRadius="4"
                      ShadowDepth="0" />
    <SolidColorBrush x:Key="TrayToggleArrowPressed" Color="#6dcaf8" />

    <SolidColorBrush x:Key="TaskButtonTopBorder" Color="#3172da" />
    <SolidColorBrush x:Key="TaskButtonLeftBorder" Color="#3067dd" />
    <SolidColorBrush x:Key="TaskButtonRightBorder" Color="#264fad" />
    <SolidColorBrush x:Key="TaskButtonBottomBorder" Color="#2652bc" />
    <SolidColorBrush x:Key="TaskButtonInnerLeftBorder" Color="#5d98f5" />
    <SolidColorBrush x:Key="TaskButtonBottomRightBorder" Color="#316fe8" />
    <LinearGradientBrush x:Key="TaskButtonBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#4892f7"
                      Offset="0.0" />
        <GradientStop Color="#3980f4"
                      Offset="0.17" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskButtonBackgroundHighlight"
                         StartPoint="0,0"
                         EndPoint="0.03,1">
        <GradientStop Color="#70aafa"
                      Offset="0.0" />
        <GradientStop Color="#003980f4"
                      Offset="0.3" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TaskButtonTopBorderHover" Color="#2c5fb2" />
    <SolidColorBrush x:Key="TaskButtonLeftBorderHover" Color="#214ba9" />
    <SolidColorBrush x:Key="TaskButtonRightBorderHover" Color="#1f408c" />
    <SolidColorBrush x:Key="TaskButtonBottomBorderHover" Color="#1d4196" />
    <SolidColorBrush x:Key="TaskButtonInnerLeftBorderHover" Color="#8bc0ff" />
    <SolidColorBrush x:Key="TaskButtonBottomRightBorderHover" Color="#2d86ff" />
    <LinearGradientBrush x:Key="TaskButtonBackgroundHover"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#8bc0ff"
                      Offset="0.0" />
        <GradientStop Color="#59a4ff"
                      Offset="0.05" />
        <GradientStop Color="#569fff"
                      Offset="0.9" />
        <GradientStop Color="#2a81ff"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskButtonBackgroundHighlightHover"
                         StartPoint="0,0"
                         EndPoint="0.03,1">
        <GradientStop Color="#8bc0ff"
                      Offset="0.0" />
        <GradientStop Color="#0059a4ff"
                      Offset="0.3" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TaskButtonTopBorderPressed" Color="#1c62d2" />
    <SolidColorBrush x:Key="TaskButtonLeftBorderPressed" Color="#082970" />
    <SolidColorBrush x:Key="TaskButtonRightBorderPressed" Color="#0e3c9f" />
    <SolidColorBrush x:Key="TaskButtonBottomBorderPressed" Color="#0c3cae" />
    <SolidColorBrush x:Key="TaskButtonInnerLeftBorderPressed" Color="#143e95" />
    <SolidColorBrush x:Key="TaskButtonBottomRightBorderPressed" Color="#07ffffff" />
    <LinearGradientBrush x:Key="TaskButtonBackgroundPressed"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#123d94"
                      Offset="0.0" />
        <GradientStop Color="#1951b9"
                      Offset="0.05" />
        <GradientStop Color="#1a50b8"
                      Offset="0.8" />
        <GradientStop Color="#2156b7"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskButtonBackgroundHighlightPressed"
                         StartPoint="0,0"
                         EndPoint="0.03,1">
        <GradientStop Color="Transparent"
                      Offset="0.0" />
        <GradientStop Color="Transparent"
                      Offset="0.3" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TaskButtonTopBorderPressedHover" Color="#2266d5" />
    <SolidColorBrush x:Key="TaskButtonInnerLeftBorderPressedHover" Color="#1c51c2" />
    <SolidColorBrush x:Key="TaskButtonBottomRightBorderPressedHover" Color="#2266d5" />
    <LinearGradientBrush x:Key="TaskButtonBackgroundPressedHover"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#1a51c2"
                      Offset="0.0" />
        <GradientStop Color="#326fea"
                      Offset="0.05" />
        <GradientStop Color="#326ee9"
                      Offset="0.9" />
        <GradientStop Color="#2c6de5"
                      Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TaskButtonTopBorderFlashing" Color="#d37400" />
    <SolidColorBrush x:Key="TaskButtonLeftBorderFlashing" Color="#d37400" />
    <SolidColorBrush x:Key="TaskButtonRightBorderFlashing" Color="#a35700" />
    <SolidColorBrush x:Key="TaskButtonBottomBorderFlashing" Color="#a35500" />
    <SolidColorBrush x:Key="TaskButtonInnerLeftBorderFlashing" Color="#ffa12b" />
    <SolidColorBrush x:Key="TaskButtonBottomRightBorderFlashing" Color="Transparent" />
    <LinearGradientBrush x:Key="TaskButtonBackgroundFlashing"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#ffb843"
                      Offset="0.0" />
        <GradientStop Color="#e37a08"
                      Offset="0.17" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskButtonBackgroundHighlightFlashing"
                         StartPoint="0,0"
                         EndPoint="0.03,1">
        <GradientStop Color="#ffc96d"
                      Offset="0.0" />
        <GradientStop Color="#00e37a08"
                      Offset="0.3" />
    </LinearGradientBrush>

    <DropShadowEffect x:Key="StartLabelShadow"
                      Color="#454c10"
                      Direction="315"
                      ShadowDepth="1"
                      BlurRadius="4"
                      Opacity="1" />

    <SolidColorBrush x:Key="ButtonForeground" Color="#ffffff" />
    <SolidColorBrush x:Key="ButtonFlashingForeground" Color="#ffffff" />
    <SolidColorBrush x:Key="ClockForeground" Color="#ffffff" />

    <SolidColorBrush x:Key="ToolTipBackground" Color="#FFFFE1" />
    <SolidColorBrush x:Key="ToolTipForeground" Color="#000000" />

    <SolidColorBrush x:Key="BalloonCloseButtonInactiveBackground" Color="#FFFFF5" />
    <SolidColorBrush x:Key="BalloonCloseButtonInactiveBorder" Color="#C7BEA6" />
    <SolidColorBrush x:Key="BalloonCloseButtonInactiveForeground" Color="#AA9C87" />
    <SolidColorBrush x:Key="BalloonCloseButtonInactiveShadow" Color="Transparent" />

    <SolidColorBrush x:Key="BalloonCloseButtonActiveBorder" Color="#FFFFFF" />
    <SolidColorBrush x:Key="BalloonCloseButtonActiveForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="BalloonCloseButtonActiveShadowLight" Color="#F3F3D6" />
    <SolidColorBrush x:Key="BalloonCloseButtonActiveShadowDark" Color="#B8B8A2" />

    <SolidColorBrush x:Key="BalloonCloseButtonHoverInnerLight" Color="#11000000" />
    <SolidColorBrush x:Key="BalloonCloseButtonHoverInnerDark" Color="#33000000" />

    <RadialGradientBrush x:Key="BalloonCloseButtonHoverBackground"
                         GradientOrigin="1.0,1.0"
                         RadiusX="0.8"
                         RadiusY="0.8">
        <GradientStop Color="#ffde17"
                      Offset="0.0" />
        <GradientStop Color="#ffad31"
                      Offset="0.5" />
        <GradientStop Color="#ffad31"
                      Offset="0.6" />
        <GradientStop Color="#ffd9a1"
                      Offset="1.0" />
    </RadialGradientBrush>

    <SolidColorBrush x:Key="BalloonCloseButtonPressedInnerLight" Color="#08000000" />
    <SolidColorBrush x:Key="BalloonCloseButtonPressedInnerDark" Color="#33000000" />

    <RadialGradientBrush x:Key="BalloonCloseButtonPressedBackground"
                         GradientOrigin="1.0,1.0"
                         RadiusX="0.8"
                         RadiusY="0.8">
        <GradientStop Color="#d89500"
                      Offset="0.0" />
        <GradientStop Color="#cc7900"
                      Offset="0.5" />
        <GradientStop Color="#cc7900"
                      Offset="0.6" />
        <GradientStop Color="#a96000"
                      Offset="1.0" />
    </RadialGradientBrush>

    <BitmapImage x:Key="StartIconImage"
                 UriSource="../Resources/startxpblue.png" />
    <BitmapImage x:Key="StartButtonImage"
                 UriSource="../Resources/startxpbluebutton.png" />

    <Style TargetType="MenuItem"
           x:Key="TaskManMenuItem">
        <Setter Property="Header"
                Value="{DynamicResource show_taskman}" />
    </Style>

    <FontFamily x:Key="GlobalFontFamily">Tahoma</FontFamily>

    <Style TargetType="ContentControl"
           x:Key="Taskbar"
           BasedOn="{StaticResource Taskbar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderThickness="0,1,0,0"
                            BorderBrush="{DynamicResource TaskbarBorder}"
                            Background="{DynamicResource TaskbarBackground}"
                            x:Name="TaskbarBorder">
                        <ContentPresenter Margin="0,-1,0,0"
                                          Name="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="TaskbarBorder"
                                        Property="Background"
                                        Value="{DynamicResource TaskbarVerticalBackground}" />
                                <Setter TargetName="TaskbarBorder"
                                        Property="BorderThickness"
                                        Value="0" />
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox"
           x:Key="Tray">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border BorderThickness="0,1"
                            BorderBrush="{DynamicResource TrayTopBottomBorder}"
                            Name="TrayOuterBorder">
                        <Border BorderThickness="1,0,0,0"
                                BorderBrush="{DynamicResource TrayLeftBorder1}"
                                Background="{DynamicResource TrayBackground}"
                                Name="TrayInnerBorder1">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="{DynamicResource TrayLeftBorder2}"
                                    Name="TrayInnerBorder2">
                                <Border BorderThickness="1,0,0,0"
                                        BorderBrush="{DynamicResource TrayLeftBorder3}"
                                        Name="TrayInnerBorder3">
                                    <Border BorderThickness="1,0,0,0"
                                            BorderBrush="{DynamicResource TrayLeftBorder4}"
                                            Padding="7,0,0,0"
                                            Name="TrayInnerBorder4">
                                        <ContentPresenter />
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="TrayOuterBorder"
                                        Property="BorderThickness"
                                        Value="1,0" />
                                <Setter TargetName="TrayInnerBorder1"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="TrayInnerBorder2"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="TrayInnerBorder3"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="TrayInnerBorder4"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="TrayInnerBorder4"
                                        Property="Padding"
                                        Value="0,7,0,0" />
                                <Setter TargetName="TrayInnerBorder1"
                                        Property="Background"
                                        Value="{DynamicResource TrayVerticalBackground}" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="TaskButton"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0,3,0,2"
                            Name="ButtonBorder">
                        <Border BorderThickness="0,1,0,0"
                                BorderBrush="{DynamicResource TaskButtonTopBorder}"
                                CornerRadius="2"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="{DynamicResource TaskButtonLeftBorder}"
                                    CornerRadius="2"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource TaskButtonRightBorder}"
                                        CornerRadius="2"
                                        x:Name="ButtonRightBorder">
                                    <Border BorderThickness="0,0,1,0"
                                            BorderBrush="{DynamicResource TaskButtonBottomBorder}"
                                            CornerRadius="2"
                                            x:Name="ButtonBottomBorder">
                                        <Border BorderThickness="1,0,0,0"
                                                BorderBrush="{DynamicResource TaskButtonInnerLeftBorder}"
                                                Background="{DynamicResource TaskButtonBackground}"
                                                CornerRadius="2"
                                                x:Name="ButtonInnerLeftBorder">
                                            <Border BorderThickness="0,0,1,1"
                                                    BorderBrush="{DynamicResource TaskButtonBottomRightBorder}"
                                                    Background="{DynamicResource TaskButtonBackgroundHighlight}"
                                                    CornerRadius="2"
                                                    x:Name="ButtonBottomRightBorder">
                                                <ContentPresenter Margin="8,3"
                                                                  x:Name="Content" />
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="8,6,8,5" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="9,7,7,4" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorderHover}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonLeftBorderHover}" />
                            <Setter TargetName="ButtonRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonRightBorderHover}" />
                            <Setter TargetName="ButtonBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomBorderHover}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerLeftBorderHover}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomRightBorderHover}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHover}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHighlightHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorderPressed}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonLeftBorderPressed}" />
                            <Setter TargetName="ButtonRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonRightBorderPressed}" />
                            <Setter TargetName="ButtonBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomBorderPressed}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerLeftBorderPressed}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomRightBorderPressed}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundPressed}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHighlightPressed}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Horizontal" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="9,4,7,2" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="TaskButtonActive"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0,3,0,2"
                            Name="ButtonBorder">
                        <Border BorderThickness="0,1,0,0"
                                BorderBrush="{DynamicResource TaskButtonTopBorderPressed}"
                                CornerRadius="2"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="{DynamicResource TaskButtonLeftBorderPressed}"
                                    CornerRadius="2"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource TaskButtonRightBorderPressed}"
                                        CornerRadius="2"
                                        x:Name="ButtonRightBorder">
                                    <Border BorderThickness="0,0,1,0"
                                            BorderBrush="{DynamicResource TaskButtonBottomBorderPressed}"
                                            CornerRadius="2"
                                            x:Name="ButtonBottomBorder">
                                        <Border BorderThickness="1,0,0,0"
                                                BorderBrush="{DynamicResource TaskButtonInnerLeftBorderPressed}"
                                                Background="{DynamicResource TaskButtonBackgroundPressed}"
                                                CornerRadius="2"
                                                x:Name="ButtonInnerLeftBorder">
                                            <Border BorderThickness="0,0,1,1"
                                                    BorderBrush="{DynamicResource TaskButtonBottomRightBorderPressed}"
                                                    CornerRadius="2"
                                                    x:Name="ButtonBottomRightBorder">
                                                <ContentPresenter Margin="9,4,7,2"
                                                                  x:Name="Content" />
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="0" />
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="8,6,8,5" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorderPressedHover}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerLeftBorderPressedHover}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomRightBorderPressedHover}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundPressedHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="TaskButtonFlashing"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0,3,0,2"
                            Name="ButtonBorder">
                        <Border BorderThickness="0,1,0,0"
                                BorderBrush="{DynamicResource TaskButtonTopBorderFlashing}"
                                CornerRadius="2"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="{DynamicResource TaskButtonLeftBorderFlashing}"
                                    CornerRadius="2"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource TaskButtonRightBorderFlashing}"
                                        CornerRadius="2"
                                        x:Name="ButtonRightBorder">
                                    <Border BorderThickness="0,0,1,0"
                                            BorderBrush="{DynamicResource TaskButtonBottomBorderFlashing}"
                                            CornerRadius="2"
                                            x:Name="ButtonBottomBorder">
                                        <Border BorderThickness="1,0,0,0"
                                                BorderBrush="{DynamicResource TaskButtonInnerLeftBorderFlashing}"
                                                Background="{DynamicResource TaskButtonBackgroundFlashing}"
                                                CornerRadius="2"
                                                x:Name="ButtonInnerLeftBorder">
                                            <Border BorderThickness="0,0,1,1"
                                                    BorderBrush="{DynamicResource TaskButtonBottomRightBorderFlashing}"
                                                    Background="{DynamicResource TaskButtonBackgroundHighlightFlashing}"
                                                    CornerRadius="2"
                                                    x:Name="ButtonBottomRightBorder">
                                                <ContentPresenter Margin="8,3"
                                                                  x:Name="Content" />
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="8,6,8,5" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="9,7,7,4" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Horizontal" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="9,4,7,2" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TaskListScrollButton"
           TargetType="RepeatButton"
           BasedOn="{StaticResource TaskListScrollButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent">
                        <Border BorderThickness="0,1,0,0"
                                BorderBrush="{DynamicResource TaskButtonTopBorder}"
                                CornerRadius="2"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="{DynamicResource TaskButtonLeftBorder}"
                                    CornerRadius="2"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource TaskButtonRightBorder}"
                                        CornerRadius="2"
                                        x:Name="ButtonRightBorder">
                                    <Border BorderThickness="0,0,1,0"
                                            BorderBrush="{DynamicResource TaskButtonBottomBorder}"
                                            CornerRadius="2"
                                            x:Name="ButtonBottomBorder">
                                        <Border BorderThickness="1,0,0,0"
                                                BorderBrush="{DynamicResource TaskButtonInnerLeftBorder}"
                                                Background="{DynamicResource TaskButtonBackground}"
                                                CornerRadius="2"
                                                x:Name="ButtonInnerLeftBorder">
                                            <Border BorderThickness="0,0,1,1"
                                                    BorderBrush="{DynamicResource TaskButtonBottomRightBorder}"
                                                    Background="{DynamicResource TaskButtonBackgroundHighlight}"
                                                    CornerRadius="2"
                                                    x:Name="ButtonBottomRightBorder">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center"
                                                                  Margin="4,-3,4,0"
                                                                  x:Name="Content" />
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorderHover}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonLeftBorderHover}" />
                            <Setter TargetName="ButtonRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonRightBorderHover}" />
                            <Setter TargetName="ButtonBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomBorderHover}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerLeftBorderHover}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomRightBorderHover}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHover}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHighlightHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorderPressed}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonLeftBorderPressed}" />
                            <Setter TargetName="ButtonRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonRightBorderPressed}" />
                            <Setter TargetName="ButtonBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomBorderPressed}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerLeftBorderPressed}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomRightBorderPressed}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundPressed}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHighlightPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ToolTip x:Key="StartButtonTip" Content="{DynamicResource start_button_tip}" />

    <Style TargetType="ToggleButton"
           x:Key="StartButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Foreground"
                Value="{DynamicResource ButtonForeground}" />
        <Setter Property="Margin"
                Value="0,0,5,-3" />
        <Setter Property="MinWidth"
                Value="99" />
        <Setter Property="Height"
                Value="33" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="StartButtonBorder">
                        <Border.Background>
                            <ImageBrush ImageSource="{DynamicResource StartButtonImage}"
                                        ViewboxUnits="RelativeToBoundingBox"
                                        Viewbox="0,0,1,0.3333" />
                        </Border.Background>
                        <ContentPresenter Margin="0,-3,0,0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="StartButtonBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{DynamicResource StartButtonImage}"
                                                ViewboxUnits="RelativeToBoundingBox"
                                                Viewbox="0,0.3333,1,0.3333" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="StartButtonBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{DynamicResource StartButtonImage}"
                                                ViewboxUnits="RelativeToBoundingBox"
                                                Viewbox="0,0.6666,1,0.3333" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="StartButtonBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{DynamicResource StartButtonImage}"
                                                ViewboxUnits="RelativeToBoundingBox"
                                                Viewbox="0,0.6666,1,0.3333" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Image"
           x:Key="TaskIcon"
           BasedOn="{StaticResource TaskIcon}">
        <Setter Property="Margin"
                Value="0,0,4,0" />
    </Style>

    <Style TargetType="Image"
           x:Key="StartIcon"
           BasedOn="{StaticResource StartIcon}">
        <Setter Property="Margin"
                Value="10,0,0,0" />
        <Setter Property="Width"
                Value="25" />
        <Setter Property="Height"
                Value="20" />
    </Style>

    <Style TargetType="TextBlock"
           x:Key="StartLabel"
           BasedOn="{StaticResource StartLabel}">
        <Setter Property="Text"
                Value="{DynamicResource start_text_xp}" />
        <Setter Property="FontFamily"
                Value="Franklin Gothic Medium Italic" />
        <Setter Property="FontSize"
                Value="19" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="Margin"
                Value="0,-1,26,0" />
        <Setter Property="Effect"
                Value="{DynamicResource StartLabelShadow}" />
    </Style>

    <Style TargetType="TextBlock"
           x:Key="Clock"
           BasedOn="{StaticResource Clock}">
        <Setter Property="Margin"
                Value="14,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0,3,0,9" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Image"
           x:Key="NotifyIcon"
           BasedOn="{StaticResource NotifyIcon}">
        <Setter Property="Margin"
                Value="0,2,4,2" />
    </Style>

    <Style TargetType="ItemsControl"
           x:Key="ToolbarItems"
           BasedOn="{StaticResource ToolbarItems}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0,3" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="ToolbarButton"
           BasedOn="{StaticResource ToolbarButton}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <Border BorderThickness="0,1,0,0"
                                BorderBrush="Transparent"
                                CornerRadius="2"
                                Margin="0,3,0,2"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="Transparent"
                                    CornerRadius="2"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="Transparent"
                                        CornerRadius="2"
                                        x:Name="ButtonRightBorder">
                                    <Border BorderThickness="0,0,1,0"
                                            BorderBrush="Transparent"
                                            CornerRadius="2"
                                            x:Name="ButtonBottomBorder">
                                        <Border BorderThickness="1,0,0,0"
                                                BorderBrush="Transparent"
                                                Background="Transparent"
                                                CornerRadius="2"
                                                x:Name="ButtonInnerLeftBorder">
                                            <Border BorderThickness="0,0,1,1"
                                                    BorderBrush="Transparent"
                                                    Background="Transparent"
                                                    CornerRadius="2"
                                                    x:Name="ButtonBottomRightBorder">
                                                <ContentPresenter Margin="2,3"
                                                                  x:Name="Content" />
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonTopBorder"
                                        Property="Margin"
                                        Value="0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorder}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonLeftBorder}" />
                            <Setter TargetName="ButtonRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonRightBorder}" />
                            <Setter TargetName="ButtonBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomBorder}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerLeftBorder}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomRightBorder}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackground}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHighlight}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorderPressed}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonLeftBorderPressed}" />
                            <Setter TargetName="ButtonRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonRightBorderPressed}" />
                            <Setter TargetName="ButtonBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomBorderPressed}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerLeftBorderPressed}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomRightBorderPressed}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundPressed}" />
                            <Setter TargetName="ButtonBottomRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHighlightPressed}" />
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="3,2,1,2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TaskListScrollViewer"
           TargetType="ScrollViewer"
           BasedOn="{StaticResource TaskListScrollViewer}">
        <Setter Property="Margin"
                Value="0,0,10,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0,0,0,10" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton"
           x:Key="TrayToggleButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="{DynamicResource TrayToggleBackground}" />
        <Setter Property="Margin"
                Value="-20,1,3,0" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent">
                        <Border BorderThickness="1"
                                BorderBrush="{DynamicResource TrayToggleBorder}"
                                CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                Padding="5,4,6,4"
                                HorizontalAlignment="Center"
                                x:Name="ButtonBorder">
                            <Path Fill="{DynamicResource ButtonForeground}"
                                  Data="M 0,4.5 L 4.5,9 L 6,8 L 3,4.5 L 6,1 L 4.5,0 Z"
                                  RenderOptions.EdgeMode="Aliased"
                                  Effect="{DynamicResource TrayToggleArrowShadow}"
                                  x:Name="ToggleArrow" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource TrayToggleHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource TrayTogglePressedBackground}" />
                            <Setter TargetName="ToggleArrow"
                                    Property="Fill"
                                    Value="{DynamicResource TrayToggleArrowPressed}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ToggleArrow"
                                    Property="RenderTransformOrigin"
                                    Value="0.6,0.5" />
                            <Setter TargetName="ToggleArrow"
                                    Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1"></ScaleTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ToolTip" Value="{DynamicResource hide}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="ToolTip" Value="{DynamicResource show_hidden}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0,-19,0,1" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="NotifyBalloonCloseButton"
           BasedOn="{StaticResource NotifyBalloonCloseButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource BalloonCloseButtonInactiveForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveShadow}"
                            BorderThickness="0,0,1,1"
                            CornerRadius="3"
                            Name="BorderShadowDark">
                        <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveShadow}"
                                BorderThickness="1,1,0,0"
                                CornerRadius="3"
                                Name="BorderShadowLight">
                            <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveBorder}"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    Background="{DynamicResource BalloonCloseButtonInactiveBackground}"
                                    Name="Border">
                                <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveShadow}"
                                        BorderThickness="0,0,1,1"
                                        CornerRadius="2"
                                        Name="BorderInnerDark">
                                    <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveShadow}"
                                            BorderThickness="1"
                                            CornerRadius="2"
                                            Padding="3,3,0,0"
                                            Name="BorderInnerLight">
                                        <Grid x:Name="Content">
                                            <Path Stroke="{TemplateBinding Foreground}"
                                                  StrokeEndLineCap="Round"
                                                  StrokeStartLineCap="Round"
                                                  Width="8"
                                                  Height="8"
                                                  StrokeThickness="2"
                                                  Data="M 0,0 l 6,6" />
                                            <Path Stroke="{TemplateBinding Foreground}"
                                                  StrokeEndLineCap="Round"
                                                  StrokeStartLineCap="Round"
                                                  Width="8"
                                                  Height="8"
                                                  StrokeThickness="2"
                                                  Data="M 0,6 l 6,-6" />
                                        </Grid>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="BorderShadowDark"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveShadowDark}" />
                            <Setter TargetName="BorderShadowLight"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveShadowLight}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveBorder}" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource BalloonCloseButtonHoverBackground}" />
                            <Setter TargetName="BorderInnerDark"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonHoverInnerDark}" />
                            <Setter TargetName="BorderInnerLight"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonHoverInnerLight}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource BalloonCloseButtonActiveForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="BorderShadowDark"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveShadowDark}" />
                            <Setter TargetName="BorderShadowLight"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveShadowLight}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveBorder}" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource BalloonCloseButtonPressedBackground}" />
                            <Setter TargetName="BorderInnerDark"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonPressedInnerDark}" />
                            <Setter TargetName="BorderInnerLight"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonPressedInnerLight}" />
                            <Setter TargetName="BorderInnerDark"
                                    Property="BorderThickness"
                                    Value="1,1,0,0" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource BalloonCloseButtonActiveForeground}" />
                            <Setter TargetName="Content"
                                    Property="Opacity"
                                    Value="0.5" />
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="-1,-1,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>